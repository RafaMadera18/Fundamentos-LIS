Reflexiones

IS retrospectiva:
A pesar de haber investigado acerca de lo que era la ingeniería de software, tenía una perspectiva muy limitada, pensaba que un ingeniero de software sólo se dedicaba a programar, pero teniendo conocimientos muy amplios del tema, lo que le permitía generar software complejo. El acercamiento con egresados en las clases de FIS me ha ayudado a tener una visión más amplia de lo que realmente se hace, y creo que éste acercamiento es muy importante ya que ellos son fuente de primera mano, obviamente la información depende de su experiencia personal, pero gracias al pensamiento crítico y a la comprensión de patrones de similitudes en la información dada por los egresados, me he dado cuenta que un ingeniero de software hace más que programar, gracias a los conocimientos adquiridos (nunca se deja de aprender) el ingeniero de software puede hacer diferentes cosas, pero de manera general, lo que he entendido hasta el momento (puede que mi perspectiva se vaya ampleando) es que un ingeniero de software es aquel quien se puede encontrar involucrado en todas las etapas del proceso de vida del software y que puede cumplir tanto labores de desarrollo, mantenimiento (sigue siendo programación pero ocurre después de que un usuario haya utilizado el producto de software), administración del desarrollo de software, etc. 

Tema libre:
En el tema libre me he puesto el reto de enseñar lo que es un ingeniero de software según las competencia de egreso de la UADY, y el significado de IS según el IEEE esto lo haré de la manera más simple posible, tal como si se lo fuera a enseñar a un niño.

Una metáfora interesante es que un ingeniero de software es como un “niñero”, el niño es el software y tiene unos padres muy exigentes, por lo que el niñero se tiene que preparar lo suficiente para poder sacar el mejor provecho del niño, pero ese trabajo no lo hará sólo, sino que con un equipo de trabajo. El ingeniero de software junto con el equipo de trabajo se encargarán de desarrollar las habilidades y exigencias que los padres quieren que cumpla el niño (competencia de desarrollo del software), los padres se van y dejan al niño en manos del “niñero” y de su equipo de trabajo, por lo que tiene que “apegarse” a un “metodo” que según lo aprendido en su preparación le permitirá sacar el mejor provecho del desarrollo del niño (parte sistemática y disciplinada del significado de IS según IEEE), como los padres no están. El ingeniero también tiene una labor de administrar los recursos, el dinero que le dejaron los padres y el plazo que le dieron para sacar el mejor provecho (competencia de administración de los procesos), sin embargo, surgen problemas en el proceso, y sus conocimientos le permiten encontrar  maneras diferentes de hacer las cosas (competencia de la innovación) pasa el tiempo y el plazo se ha cumplido, el “niñero” entrega al niño y por diversos motivos el “niñero” se va. Después de un tiempo, los padres se dieron cuenta que el niño tiene problemas, por lo que llaman a otro “niñero” para que “corrija” los “errores” del primero, los “apuntes” de lo que el primer niñero hizo tanto del proceso, recursos, etc (lo que debió cuantificar, parte de un componente de IS según IEEE) permitirán al nuevo “niñero” darse cuenta de en qué podrían trabajar y qué métodos segir para corregir problemas, perfeccionar aspectos, prevenir problemas futuros e incluso adaptar un cambio debido a nuevas exigencias de los padres (competencia de mantenimiento) los padres se van y así se repite el proceso indefinidamente.
